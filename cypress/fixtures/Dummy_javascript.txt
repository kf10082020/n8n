var File = function (url, object) {
	File.list = Array.isArray(File.list) ? File.list : [];
	File.progress = File.progress || 0;

	this.url = url;
	this.object = object;
	this.progress = 0;
};

/**
 * Поиск индекса файла по совпадению:
 * - с другим объектом File (equals)
 * - с url
 * - с object
 */
File.indexOf = function (term) {
	for (let i = 0; i < File.list.length; i++) {
		const file = File.list[i];
		if (
			file.equals(term) ||
			file.url === term ||
			file.object === term
		) {
			return i;
		}
	}
	return -1;
};

/**
 * Возвращает файл, если найден
 */
File.find = function (term) {
	const index = File.indexOf(term);
	return index !== -1 ? File.list[index] : undefined;
};

/**
 * Проверка эквивалентности файлов
 */
File.prototype.equals = function (file) {
	return (
		file instanceof File &&
		this.url === file.url &&
		this.object === file.object
	);
};

/**
 * Сохраняет текущий файл в File.list.
 * Если файл уже существует, обновляет его.
 */
File.prototype.save = function (update = true) {
	if (!Array.isArray(File.list)) {
		File.list = [];
	}

	const index = File.indexOf(this);

	if (index !== -1 && update) {
		File.list[index] = this;
		console.warn(
			'File "%s" has been loaded before and updated now for:',
			this.url,
			this
		);
	} else {
		File.list.push(this);
	}

	console.log(File.list);
	return this;
};
